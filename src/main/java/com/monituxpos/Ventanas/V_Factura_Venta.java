/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.monituxpos.Ventanas;

import com.monituxpos.Clases.*;
import jakarta.persistence.EntityManager;
import jakarta.persistence.EntityManagerFactory;
import jakarta.persistence.Persistence;
import jakarta.persistence.TypedQuery;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.SwingWorker;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Miguel Cerrato
 */
public class V_Factura_Venta extends javax.swing.JPanel {

      public int Secuencial_Usuario=1;//Cambiar esto
      public int Secuencial_Cliente;//Cambiar esto
    public int Secuencial_Empresa=1;//Cambiar esto
    public int Secuencial;
    
    
           double subTotal = 0.0;
double total = 0.0;
double otrosCargos = 0.0;
double impuesto = 0.0;
double descuento = 0.0;
    
       public final Map<String, Miniatura_Producto> listaDeItems = new HashMap<>();
public final Map<String, SelectorCantidad> selectoresCantidad = new HashMap<>();

    
    /**
     * Creates new form V_Factura_Venta
     */
    public V_Factura_Venta() {
        
         SwingUtilities.invokeLater(() -> {
     
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("MonituxPU");
EntityManager em = emf.createEntityManager();
llenarComboCliente();
        V_Factura_Venta.this.cargarItems(Secuencial_Empresa, contenedor, contenedor_selector, em);
             
             
        });
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menu_contextual = new javax.swing.JPopupMenu();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem8 = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        comboCliente = new javax.swing.JComboBox<>();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        datePicker1 = new com.github.lgooddatepicker.components.DatePicker();
        jComboBox3 = new javax.swing.JComboBox<>();
        jComboBox4 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        lbl_otrosCargos = new javax.swing.JTextField();
        lbl_impuesto = new javax.swing.JTextField();
        lbl_descuento = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lbl_subTotal = new javax.swing.JLabel();
        lbl_total = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        contenedor = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        contenedor_selector = new javax.swing.JPanel();
        icono_carga = new javax.swing.JLabel();

        jMenu1.setText("Imagen");

        jMenuItem1.setText("Local");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Web");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Hacer Foto");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        menu_contextual.add(jMenu1);

        jMenuItem7.setText("Comentario");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        menu_contextual.add(jMenuItem7);

        jMenu3.setText("Producto");

        jMenuItem4.setText("Agregar Unidades");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem4);

        jMenuItem5.setText("Retirar Unidades");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem5);
        jMenu3.add(jSeparator1);

        jMenuItem6.setText("Ver Producto");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem6);

        menu_contextual.add(jMenu3);

        jMenuItem8.setText("Ampliar");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });
        menu_contextual.add(jMenuItem8);

        setBackground(new java.awt.Color(11, 8, 20));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(11, 8, 20));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Codigo", "Descripcion", "Marca", "Codigo_Barra" }));

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jLabel1.setText("Buscar Por:");
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, 0, 175, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 50, -1, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/box_down.png"))); // NOI18N
        jButton1.setText("<html><b>Nuevo</b><br><i>Producto</i></html>");
        jButton1.setBackground(new java.awt.Color(11, 8, 20));
        jButton1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(201, 52, 70, 92));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/group.png"))); // NOI18N
        jButton2.setText("<html><b>Gestionar</b><br><i>Cliente</i></html>");
        jButton2.setBackground(new java.awt.Color(11, 8, 20));
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 52, 70, 92));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/page_white_put.png"))); // NOI18N
        jButton3.setText("<html><b>Importar</b><br><i>Cotizacion</i></html>");
        jButton3.setBackground(new java.awt.Color(11, 8, 20));
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 52, 72, 92));

        jPanel2.setBackground(new java.awt.Color(0, 168, 107));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setText("Cliente:");
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(13, 30, -1, -1));

        comboCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                comboClienteMouseClicked(evt);
            }
        });
        jPanel2.add(comboCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(59, 25, 221, -1));

        jTextField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField2KeyReleased(evt);
            }
        });
        jPanel2.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 25, 85, -1));

        jLabel6.setText("Telefono:");
        jLabel6.setForeground(new java.awt.Color(102, 0, 204));
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 6, -1, -1));

        jLabel7.setText("Tipo de Venta:");
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 60, -1, -1));

        jLabel8.setText("Metodo de Pago:");
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 110, -1, -1));

        jLabel9.setText("Se Vence:");
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, -1, -1));

        datePicker1.setBackground(new java.awt.Color(0, 168, 107));
        jPanel2.add(datePicker1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 80, -1, -1));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Contado", "Credito" }));
        jPanel2.add(jComboBox3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, 93, -1));

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Efectivo", "Tarjeta", "Otro", "Ninguno" }));
        jPanel2.add(jComboBox4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 93, -1));

        jLabel10.setText("Detalle:");
        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 150, -1, -1));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Descripcion", "Cantidad", "Precio", "Total", "SP"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 170, 398, 183));

        jButton7.setText("<html><b>Generar</b><br>Venta</html>");
        jButton7.setBackground(new java.awt.Color(11, 8, 20));
        jButton7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton7.setForeground(new java.awt.Color(0, 255, 0));
        jPanel2.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(319, 458, 72, 85));

        jButton8.setText("<html><b>Generar</b><br>Cotizacion</html>");
        jButton8.setBackground(new java.awt.Color(11, 8, 20));
        jButton8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton8.setForeground(new java.awt.Color(255, 255, 0));
        jPanel2.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 458, 72, 85));

        jLabel12.setText("Sub-Total:");
        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 356, -1, -1));

        jLabel13.setText("Total:");
        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 387, -1, -1));

        jLabel14.setText("Otros Cargos:");
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 430, -1, -1));

        jLabel15.setText("Descuento:");
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(32, 506, -1, -1));

        jLabel16.setText("%");
        jLabel16.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(154, 468, -1, -1));

        lbl_otrosCargos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lbl_otrosCargos.setBackground(new java.awt.Color(0, 204, 204));
        lbl_otrosCargos.setBorder(null);
        lbl_otrosCargos.setForeground(Color.BLUE); // Cambia el texto a azul
        lbl_otrosCargos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbl_otrosCargosActionPerformed(evt);
            }
        });
        lbl_otrosCargos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lbl_otrosCargosKeyReleased(evt);
            }
        });
        jPanel2.add(lbl_otrosCargos, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 430, 80, -1));

        lbl_impuesto.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lbl_impuesto.setForeground(Color.BLUE); // Cambia el texto a azul
        lbl_impuesto.setBackground(new java.awt.Color(0, 204, 204));
        lbl_impuesto.setBorder(null);
        lbl_impuesto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lbl_impuestoActionPerformed(evt);
            }
        });
        lbl_impuesto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lbl_impuestoKeyReleased(evt);
            }
        });
        jPanel2.add(lbl_impuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 470, 50, -1));

        lbl_descuento.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lbl_descuento.setForeground(Color.BLUE); // Cambia el texto a azul
        lbl_descuento.setBackground(new java.awt.Color(0, 204, 204));
        lbl_descuento.setBorder(null);
        lbl_descuento.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                lbl_descuentoKeyReleased(evt);
            }
        });
        jPanel2.add(lbl_descuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 510, 50, -1));

        jLabel17.setText("Impuesto:");
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(39, 468, -1, -1));

        jLabel18.setText("%");
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jPanel2.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(153, 506, -1, -1));

        lbl_subTotal.setText("0");
        lbl_subTotal.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_subTotal.setForeground(new java.awt.Color(255, 255, 0));
        jPanel2.add(lbl_subTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(244, 356, 150, -1));

        lbl_total.setText("0");
        lbl_total.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl_total.setForeground(new java.awt.Color(255, 255, 0));
        jPanel2.add(lbl_total, new org.netbeans.lib.awtextra.AbsoluteConstraints(244, 387, 150, -1));

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(431, 50, 400, 560));

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setBackground(new java.awt.Color(35, 32, 40));
        jScrollPane1.setHorizontalScrollBar(null);

        contenedor.setBackground(new java.awt.Color(35, 32, 45));
        contenedor.setAutoscrolls(true);
        contenedor.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                contenedorMouseMoved(evt);
            }
        });
        contenedor.setLayout(new java.awt.GridBagLayout());
        jScrollPane1.setViewportView(contenedor);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 156, 419, 332));

        jLabel2.setText("Productos en Lista:");
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 497, -1, -1));

        jLabel3.setText("0");
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 255));
        jLabel3.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jLabel3MouseMoved(evt);
            }
        });
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(115, 494, 310, -1));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/database_refresh.png"))); // NOI18N
        jButton4.setText("<html><b>Reset</b><br>Factura</html>");
        jButton4.setBackground(new java.awt.Color(11, 8, 20));
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51)));
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 520, 70, 90));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete1.png"))); // NOI18N
        jButton5.setText("<html><b>Quitar</b><br>Elemento</html>");
        jButton5.setBackground(new java.awt.Color(11, 8, 20));
        jButton5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton5.setForeground(new java.awt.Color(255, 255, 255));
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(82, 520, 70, 90));

        jButton6.setText("<html><b>Actualizar</b><br>Detalle</html>");
        jButton6.setBackground(new java.awt.Color(11, 8, 20));
        jButton6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(353, 520, 72, 90));

        jLabel4.setText("Registrar Venta");
        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 255, 0));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 10, -1, -1));

        jLabel11.setText("Mecanica: Señale Producto -> Click -> Cantidad -> Actualizar Detalle");
        jLabel11.setForeground(new java.awt.Color(255, 255, 0));
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 19, 419, -1));

        contenedor_selector.setBackground(new java.awt.Color(35, 32, 45));
        jScrollPane3.setViewportView(contenedor_selector);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(158, 520, 189, 90));

        icono_carga.setIcon(new javax.swing.ImageIcon(getClass().getResource("/gifs/spinner1-r.gif"))); // NOI18N
        icono_carga.setVisible(false);
        add(icono_carga, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 10, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    
    

 
public void cargarItems(int secuencialEmpresa, JPanel contenedor, JPanel contenedor_selector, EntityManager entityManager) {

    icono_carga.setVisible(true);
    contenedor.setLayout(new GridLayout(0, 3, 5, 5)); // 4 columnas, filas dinámicas
              contenedor_selector.setLayout(new GridLayout(0, 1, 5, 5)); // 4 columnas, filas dinámicas
    

    contenedor.removeAll();
    contenedor_selector.removeAll();
    listaDeItems.clear();
    selectoresCantidad.clear();

    // 🔍 Consulta JPA
    List<Producto> productos = entityManager
        .createQuery("SELECT p FROM Producto p WHERE p.Secuencial_Empresa = :empresa", Producto.class)
        .setParameter("empresa", secuencialEmpresa)
        .getResultList();

    for (Producto producto : productos) {
        ImageIcon imagenIcon = producto.getImagen() != null && producto.getImagen().length > 0
            ? new ImageIcon(producto.getImagen())
            : new ImageIcon("C:\\Users\\Miguel Cerrato\\Documents\\NetBeansProjects\\Experimento\\src\\experimento\\test.png");
//ImageIcon icono = new ImageIcon(getClass().getResource("/icons/no-image-icon-10.png"));

       
        Miniatura_Producto miniatura = new Miniatura_Producto(producto);

      
        miniatura.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                SelectorCantidad selector = selectoresCantidad.computeIfAbsent(
                    producto.getCodigo(),
                    codigo -> {
                        SelectorCantidad nuevo = new SelectorCantidad(codigo);
                        nuevo.setCantidad(0);
                        
                        return nuevo;
                    }
                );

                if (!listaDeItems.containsKey(producto.getCodigo())) {
                    listaDeItems.put(producto.getCodigo(), miniatura);
                   // miniatura.checkBoxSeleccionado.setSelected(true);

                    if (!Arrays.asList(contenedor_selector.getComponents()).contains(selector)) {
                        contenedor_selector.add(selector);
                    }
                } else {
//                    contenedor_selector.remove(selector);
//                    listaDeItems.remove(producto.getCodigo());
//                    miniatura.checkBoxSeleccionado.setSelected(false);
                }

                contenedor_selector.revalidate();
                contenedor_selector.repaint();
            }
        });
        
        
        
// Agregar el menú contextual
miniatura.addMouseListener(new MouseAdapter() {
    @Override
    public void mousePressed(MouseEvent e) {
        if (e.isPopupTrigger()) {
            menu_contextual.show(e.getComponent(), e.getX(), e.getY());
        }
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        if (e.isPopupTrigger()) {
            menu_contextual.show(e.getComponent(), e.getX(), e.getY());
        }
    }
});

if (miniatura.cargarComentario()!=null){

 //miniatura.setToolTipText(miniatura.cargarComentario());
 
 
 miniatura.setToolTipText("<html><b>" + miniatura.producto.getDescripcion() + "</b><br>"+miniatura.cargarComentario()+"</html>");
 
 //<html><b>Actualizar</b><br>Detalle</html>
}else{

    miniatura.setToolTipText("<html><b>" + miniatura.producto.getDescripcion() + "</b><br></html>");
 
}

        contenedor.add(miniatura);
    }

    contenedor.revalidate();
    contenedor.repaint();
    
    icono_carga.setVisible(false);
    
}

    


public void cargarItemsFiltrados(
    int secuencialEmpresa,
    JComboBox<String> comboFiltro,
    JTextField campoValorFiltro,
    JPanel contenedor,
    JPanel contenedor_selector,
    EntityManager entityManager
) {
    contenedor.setLayout(new GridLayout(0, 3, 5, 5));
    contenedor_selector.setLayout(new GridLayout(0, 1, 5, 5));

    contenedor.removeAll();
    //contenedor_selector.removeAll();
    //listaDeItems.clear();
   // selectoresCantidad.clear();

    String campoFiltro = (String) comboFiltro.getSelectedItem(); // Ej: "tipoProducto"
    String valorFiltro = campoValorFiltro.getText();             // Ej: "Electrónica"

    String jpql = "SELECT p FROM Producto p WHERE p.Secuencial_Empresa = :empresa";
    boolean aplicarFiltro = campoFiltro != null && !campoFiltro.trim().isEmpty()
                         && valorFiltro != null && !valorFiltro.trim().isEmpty();

    if (aplicarFiltro) {
        jpql += " AND LOWER(p." + campoFiltro + ") LIKE :valorFiltro";
    }

    TypedQuery<Producto> query = entityManager.createQuery(jpql, Producto.class);
    query.setParameter("empresa", secuencialEmpresa);
    if (aplicarFiltro) {
        query.setParameter("valorFiltro", "%" + valorFiltro.toLowerCase() + "%");
    }

    List<Producto> productos = query.getResultList();

    for (Producto producto : productos) {
        ImageIcon imagenIcon = (producto.getImagen() != null && producto.getImagen().length > 0)
            ? new ImageIcon(producto.getImagen())
            : new ImageIcon("C:\\Users\\Miguel Cerrato\\Documents\\NetBeansProjects\\Experimento\\src\\experimento\\test.png");

        Miniatura_Producto miniatura = new Miniatura_Producto(producto);

        miniatura.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                SelectorCantidad selector = selectoresCantidad.computeIfAbsent(
                    producto.getCodigo(),
                    codigo -> {
                        SelectorCantidad nuevo = new SelectorCantidad(codigo);
                        nuevo.setCantidad(0);
                        return nuevo;
                    }
                );

                if (!listaDeItems.containsKey(producto.getCodigo())) {
                    listaDeItems.put(producto.getCodigo(), miniatura);
                    if (!Arrays.asList(contenedor_selector.getComponents()).contains(selector)) {
                        contenedor_selector.add(selector);
                    }
                }

                contenedor_selector.revalidate();
                contenedor_selector.repaint();
            }

            @Override
            public void mousePressed(MouseEvent e) {
                if (e.isPopupTrigger()) {
                    menu_contextual.show(e.getComponent(), e.getX(), e.getY());
                }
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                if (e.isPopupTrigger()) {
                    menu_contextual.show(e.getComponent(), e.getX(), e.getY());
                }
            }
        });

        contenedor.add(miniatura);
    }

    contenedor.revalidate();
    contenedor.repaint();
}






    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        V_Producto x = new V_Producto();
   
        x.setLocationRelativeTo(null);
        x.setVisible(true);

//**********************************

//Producto productoPrueba = new Producto();
//
//productoPrueba.setSecuencial_Proveedor(1);
//productoPrueba.setCodigo("PRD-001");
//productoPrueba.setDescripcion("Ratón inalámbrico ergonómico");
//productoPrueba.setCantidad(50);
//productoPrueba.setPrecio_Costo(8.50);
//productoPrueba.setPrecio_Venta(14.99);
//productoPrueba.setMarca("Logitech");
//productoPrueba.setCodigo_Barra("1234567890123");
//productoPrueba.setCodigo_Fabricante("LG-MOUSE-2025");
//
//// Imagen de prueba como byte[] (puedes cargarla desde archivo si lo deseas)
//productoPrueba.setImagen(new byte[0]); // vacío por ahora
//
//productoPrueba.setFecha_Caducidad("2026-12-31");
//productoPrueba.setTipo("Producto");
//productoPrueba.setSecuencial_Categoria(3);
//productoPrueba.setExpira(false);
//productoPrueba.setExistencia_Minima(10);


//**********************************

//
//

//
//   Miniatura_Producto miniatura = new Miniatura_Producto(productoPrueba);
//
//miniatura.setVisible(true);
//miniatura.setSize(110, 130);
//
//// Agregar el menú contextual
//miniatura.addMouseListener(new MouseAdapter() {
//    @Override
//    public void mousePressed(MouseEvent e) {
//        if (e.isPopupTrigger()) {
//            //jPopupMenu1.show(e.getComponent(), e.getX(), e.getY());
//        }
//    }
//
//    @Override
//    public void mouseReleased(MouseEvent e) {
//        if (e.isPopupTrigger()) {
//           // jPopupMenu1.show(e.getComponent(), e.getX(), e.getY());
//        }
//    }
//});
//
//miniatura.setBackground(Color.green);
//
//contenedor.add(miniatura);
//contenedor.revalidate();  // Mejor que repaint para layouts dinámicos
//contenedor.repaint();
//
//



//**********************************




        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

   // public void cargarItems(){
//    icono_carga.setVisible(true);
//        
//         contenedor_selector.setLayout(new GridLayout(0, 1, 5, 5)); // 4 columnas, filas dinámicas
//        EntityManagerFactory emf = Persistence.createEntityManagerFactory("MonituxPU");
//EntityManager em = emf.createEntityManager();
//
//cargarItems(Secuencial_Empresa, contenedor, contenedor_selector, em);
//      icono_carga.setVisible(false);
        

  //  }
    
    
    
    public void cargarItems() {
    icono_carga.setVisible(true); // Mostrar ícono de carga

    SwingWorker<Void, Void> worker = new SwingWorker<>() {
        @Override
        protected Void doInBackground() {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("MonituxPU");
            EntityManager em = emf.createEntityManager();
            cargarItems(Secuencial_Empresa, contenedor, contenedor_selector, em);
            em.close();
            emf.close();
            return null;
        }

        @Override
        protected void done() {
            icono_carga.setVisible(false); // Ocultar ícono de carga
            revalidate();
            repaint();
        }
    };

    worker.execute(); // Ejecutar en segundo plano
}

    
    
    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown

   
        // TODO add your handling code here:
    }//GEN-LAST:event_formComponentShown

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed

        icono_carga.setVisible(true);
        int x = JOptionPane.showConfirmDialog(null, "¿Está seguro de que desea limpiar la factura?", "Confirmación", JOptionPane.YES_NO_OPTION);

if (x == JOptionPane.NO_OPTION) {
    icono_carga.setVisible(false);
    return; // Si el usuario selecciona "No", no se limpia la factura
    
}

limpiarFactura(); // Llama al método para limpiar la factura

icono_carga.setVisible(false);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

   private void limpiarFactura() {
    // 1. Resetear selección de cliente
    llenarComboCliente();
    lbl_total.setText("0.0");
    lbl_subTotal.setText("0.0");
    comboCliente.setSelectedIndex(-1);

    // 2. Limpiar contenedores visuales
    contenedor.removeAll();
    contenedor_selector.removeAll();

    // 3. Limpiar listas de datos
    listaDeItems.clear();
    selectoresCantidad.clear();

    // 4. Reiniciar valores numéricos
    total = 0;
    subTotal = 0;
    impuesto = 0;
    descuento = 0;
    otrosCargos=0;

    // 5. Limpiar etiquetas
    lbl_otrosCargos.setText("");
    lbl_impuesto.setText("");
    lbl_descuento.setText("");

    // 6. Resetear combos y botones
    jComboBox3.setSelectedIndex(0);
    jComboBox4.setSelectedIndex(0);
    jButton3.setEnabled(true);

    // 7. Crear y asignar nuevo modelo de tabla
    DefaultTableModel modeloTabla = new DefaultTableModel(
        new Object[]{"Código", "Descripción", "Cantidad", "Precio", "Total", "SP"}, 0
    ) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // Solo lectura
        }
    };

    jTable1.setModel(modeloTabla); // Asignar el modelo a la tabla

    // 8. Recargar items disponibles
    cargarItems();
}

    
    public void Eliminar_Item_Selector() {
    List<Component> paraEliminar = new ArrayList<>();

    for (Component comp : contenedor_selector.getComponents()) {
        if (comp instanceof SelectorCantidad selector) {
            String codigo = selector.getCodigo();

            // Actualizar cantidad si el producto está en la lista
            if (listaDeItems.containsKey(codigo)) {
                Miniatura_Producto item = listaDeItems.get(codigo);
                double cantidad = selector.getCantidadSeleccionada();
                item.setCantidadSelecccion(cantidad);
                selector.setCantidad(cantidad); // reflejar en el spinner
            }

            // Verificar si está marcado para eliminar
            if (selector.isSeleccionado()) {
                if (listaDeItems.containsKey(codigo)) {
                    JOptionPane.showMessageDialog(
                        null,
                        "El item " + codigo + " se removió de la factura",
                        "Ventas",
                        JOptionPane.INFORMATION_MESSAGE
                    );
                    paraEliminar.add(selector);
                    listaDeItems.remove(codigo);
                } else {
                    selector.setBackground(Color.RED); // marcar visualmente si no está en la lista
                }
            }
        }
    }

    // Eliminar selectores marcados
    for (Component comp : paraEliminar) {
        contenedor_selector.remove(comp);
    }

    contenedor_selector.revalidate();
    contenedor_selector.repaint();

    // Recargar visualmente si lo necesitas
    jLabel3.setText(String.valueOf(listaDeItems.size()));
    jButton6.doClick(); // Actualiza la tabla
}

    
    
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed

        
        
Eliminar_Item_Selector();

// TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem8ActionPerformed

        Component invocador = menu_contextual.getInvoker();
if (invocador instanceof Miniatura_Producto) {
    Miniatura_Producto miniatura = (Miniatura_Producto) invocador;
   
    
    byte[] datosImagen = miniatura.producto.getImagen(); // suponiendo que devuelve byte[]

ImageIcon imagen = null;

if (datosImagen != null && datosImagen.length > 0) {
    try {
        ByteArrayInputStream bis = new ByteArrayInputStream(datosImagen);
        BufferedImage bufferedImage = ImageIO.read(bis);
        imagen = new ImageIcon(bufferedImage);
    } catch (IOException e) {
        e.printStackTrace();
        // Puedes cargar una imagen por defecto si falla
        imagen = new ImageIcon(getClass().getResource("/icons/no-image-icon-10.png"));
    }
} else {
    // Imagen por defecto si no hay datos
    imagen = new ImageIcon(getClass().getResource("/icons/no-image-icon-10.png"));
}

    
    

    try {
    V_Vista_Ampliada v_Vista_Ampliada = new V_Vista_Ampliada(miniatura.producto.getCodigo(), 
            miniatura.producto.getDescripcion(), imagen);
    v_Vista_Ampliada.setVisible(true);
} catch (Exception e) {
    JOptionPane.showMessageDialog(null, "Error al cargar la vista ampliada.", "Error", JOptionPane.ERROR_MESSAGE);
}

    
}


        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem8ActionPerformed

    private void contenedorMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_contenedorMouseMoved
        // TODO add your handling code here:
        jLabel3.setText(String.valueOf(listaDeItems.size()));
    }//GEN-LAST:event_contenedorMouseMoved

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        //*********************************
        
        
        
        total = 0;
    subTotal = 0;
//    impuesto = 0;
//    descuento = 0;
//    otrosCargos = 0;

    // Reiniciar visualmente
  DefaultTableModel modeloTabla = new DefaultTableModel(
    new Object[]{"Código", "Descripción", "Cantidad", "Precio", "Total", "SP"}, 0
) {
    @Override
    public boolean isCellEditable(int row, int column) {
        return false; // Solo lectura
    }
};

jTable1.setModel(modeloTabla);
jTable1.setRowHeight(24); // Altura de fila
jTable1.setFont(new Font("Arial", Font.PLAIN, 13)); // Fuente legible
jTable1.setGridColor(Color.LIGHT_GRAY); // Líneas suaves
jTable1.setShowGrid(true); // Mostrar líneas

    
    lbl_subTotal.setText("0.00");
    lbl_total.setText("0.00");

    // Actualizar cantidades desde los selectores
    for (Component comp : contenedor_selector.getComponents()) {
        if (comp instanceof SelectorCantidad selector) {
            String codigo = selector.getCodigo();
            if (listaDeItems.containsKey(codigo)) {
                Miniatura_Producto item = listaDeItems.get(codigo);
                item.cantidadSelecccion = selector.getCantidadSeleccionada();
            }
        }
    }

    // Procesar ítems seleccionados
    for (String clave : listaDeItems.keySet()) {
        Miniatura_Producto item = listaDeItems.get(clave);

        if (item.cantidadSelecccion != 0) {
            double cantidad = item.cantidadSelecccion;
            double precio = item.producto.getPrecio_Venta();
            double totalItem = cantidad * precio;

            modeloTabla.addRow(new Object[] {
                item.producto.getCodigo(),
                item.producto.getDescripcion(),
                cantidad,
                precio,
                totalItem,
                item.producto.getSecuencial()
            });

            subTotal += totalItem;

        } else {
            JOptionPane.showMessageDialog(
                null,
                "Revise la cantidad que desea agregar.\n -- " + item.producto.getCodigo() + " --\n" + item.producto.getDescripcion(),
                "Error",
                JOptionPane.ERROR_MESSAGE
            );
            return;
        }
    }

    // Actualizar totales
    ActualizarNumeros();
        
        
        //********************************
        
        
        
    }//GEN-LAST:event_jButton6ActionPerformed

    
 private void ActualizarNumeros() {
      jLabel3.setText(String.valueOf(listaDeItems.size()));
     total = subTotal + impuesto + otrosCargos - descuento;

    lbl_subTotal.setText(String.format("%.2f", subTotal));
    //lbl_impuesto.setText(String.format("%.2f", impuesto));
    lbl_otrosCargos.setText(String.format("%.2f", otrosCargos));
    //lbl_descuento.setText(String.format("%.2f", descuento));
    lbl_total.setText(String.format("%.2f", total));
}

    
    
    
    private void jLabel3MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseMoved

                jLabel3.setText(String.valueOf(listaDeItems.size()));
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseMoved

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved

                jLabel3.setText(String.valueOf(listaDeItems.size()));
        // TODO add your handling code here:
    }//GEN-LAST:event_formMouseMoved

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        
         V_Cliente x = new V_Cliente();
   
        x.setLocationRelativeTo(null);
        x.setVisible(true);

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    
    
    public void llenarComboCliente() {
    comboCliente.removeAllItems(); // Limpiar combo

    EntityManagerFactory emf = Persistence.createEntityManagerFactory("MonituxPU");
    EntityManager em = emf.createEntityManager();

    try {
        List<Cliente> clientes = em.createQuery(
            "SELECT c FROM Cliente c WHERE c.Activo = true AND c.Secuencial_Empresa = :empresa", Cliente.class)
            .setParameter("empresa", Secuencial_Empresa)
            .getResultList();

        if (Secuencial != -1) {
            for (Cliente c : clientes) {
                comboCliente.addItem(c.getSecuencial() + " - " + c.getNombre());
            }

            for (int i = 0; i < comboCliente.getItemCount(); i++) {
                String item = comboCliente.getItemAt(i);
                if (item.contains(String.valueOf(this.Secuencial_Cliente))) {
                    comboCliente.setSelectedItem(item);
                    break;
                }
            }
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al cargar clientes: " + e.getMessage());
    } finally {
        em.close();
        emf.close();
    }
}

    
    
    
    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked

     
        

        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel4MouseClicked

    private void lbl_otrosCargosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbl_otrosCargosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_otrosCargosActionPerformed

    private void lbl_otrosCargosKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lbl_otrosCargosKeyReleased

        if (lbl_otrosCargos.getText().trim().isEmpty()) {
    otrosCargos = 0.00;
} else {
    try {
        otrosCargos = Double.parseDouble(lbl_otrosCargos.getText().trim());
    } catch (NumberFormatException e) {
        otrosCargos = 0.00; // Si hay error al convertir, se establece en 0.00
    }
    
    
}

        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_otrosCargosKeyReleased

    private void lbl_impuestoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lbl_impuestoKeyReleased

        
        if (lbl_impuesto.getText().trim().isEmpty()) {
    impuesto = 0.00;
} else {
    try {
        impuesto = Double.parseDouble(lbl_impuesto.getText().trim());
        impuesto = (impuesto / 100) * subTotal; // Convertir el porcentaje a decimal
    } catch (NumberFormatException e) {
        impuesto = 0.00; // Si hay un error al convertir, se establece en 0.00
    }
    
     
}

        
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_impuestoKeyReleased

    private void lbl_descuentoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lbl_descuentoKeyReleased


if (lbl_descuento.getText().trim().isEmpty()) {
    descuento = 0.00;
} else {
    try {
        descuento = Double.parseDouble(lbl_descuento.getText().trim());
        descuento = (descuento / 100) * subTotal; // Convertir el porcentaje a decimal
    } catch (NumberFormatException e) {
        descuento = 0.00; // Si hay un error al convertir, se establece en 0.00
    }
    
     
}
        

// TODO add your handling code here:
    }//GEN-LAST:event_lbl_descuentoKeyReleased

    private void comboClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_comboClienteMouseClicked

        llenarComboCliente();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_comboClienteMouseClicked

    private void lbl_impuestoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lbl_impuestoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lbl_impuestoActionPerformed

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased

          EntityManagerFactory emf = Persistence.createEntityManagerFactory("MonituxPU");
EntityManager em = emf.createEntityManager();
cargarItemsFiltrados(Secuencial_Empresa,jComboBox1,jTextField1,contenedor,contenedor_selector,em);
        
        /*
        btnFiltrar.addActionListener(e -> {
    cargarItemsFiltrados(secuencialEmpresa, comboFiltro, contenedor, contenedor_selector, entityManager);
});

        */
        
        
        
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jTextField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField2KeyReleased
        // TODO add your handling code here:
        
        
        // Limpiar el JComboBox
comboCliente.removeAllItems();

// Crear el EntityManager
EntityManagerFactory emf = Persistence.createEntityManagerFactory("MonituxPU");
EntityManager entityManager = emf.createEntityManager();

// Asegurar que la base de datos esté lista (opcional en JPA estándar)
// No hay equivalente directo a EnsureCreated, pero puedes validar con lógica propia si lo necesitas

// Obtener texto del filtro
String textoTelefono = jTextField2.getText(); // textBox2 es un JTextField

// Consulta JPA para clientes activos cuyo teléfono contiene el texto
List<Cliente> clientes = entityManager.createQuery(
    "SELECT c FROM Cliente c WHERE c.Activo = true AND c.Secuencial_Empresa = :empresa AND LOWER(c.Telefono) LIKE :telefono",
    Cliente.class
)
.setParameter("empresa", Secuencial_Empresa)
.setParameter("telefono", "%" + textoTelefono.toLowerCase() + "%")
.getResultList();

// Agregar resultados al JComboBox
for (Cliente item : clientes) {
    String texto = item.getSecuencial() + " - " + item.getNombre();
    comboCliente.addItem(texto);
    comboCliente.setSelectedItem(texto); // Esto selecciona el último cliente encontrado
}

        
        
    }//GEN-LAST:event_jTextField2KeyReleased

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed


        
                   
        Component invocador = menu_contextual.getInvoker();
if (invocador instanceof Miniatura_Producto) {
    Miniatura_Producto miniatura = (Miniatura_Producto) invocador;
        
    miniatura.actualizarImagenWeb();
    cargarItems();
 
}
        
        

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed


        
        Component invocador = menu_contextual.getInvoker();
if (invocador instanceof Miniatura_Producto) {
    Miniatura_Producto miniatura = (Miniatura_Producto) invocador;
    
miniatura.Agregar_Comentario(miniatura.getComentario());

cargarItems();
    
}

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed

             
        Component invocador = menu_contextual.getInvoker();
if (invocador instanceof Miniatura_Producto) {
    Miniatura_Producto miniatura = (Miniatura_Producto) invocador;
    
miniatura.actualizarProductoAgregarUnidades();

cargarItems();
}
        
        

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    
   
    
    
    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed


                
        Component invocador = menu_contextual.getInvoker();
if (invocador instanceof Miniatura_Producto) {
    Miniatura_Producto miniatura = (Miniatura_Producto) invocador;
    
miniatura.actualizarProductoRetirarUnidades();

cargarItems();
}
        


        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed


        
             
        Component invocador = menu_contextual.getInvoker();
if (invocador instanceof Miniatura_Producto) {
    Miniatura_Producto miniatura = (Miniatura_Producto) invocador;
        
        V_Producto form = new V_Producto(false, miniatura.producto);
form.setOnProductoEditado(() -> cargarItems());
form.setVisible(true);
}

        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed


              
        Component invocador = menu_contextual.getInvoker();
if (invocador instanceof Miniatura_Producto) {
    Miniatura_Producto miniatura = (Miniatura_Producto) invocador;
        
    miniatura.actualizarImagenLocal();
    cargarItems();
 
}
        


        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed


                        
        Component invocador = menu_contextual.getInvoker();
if (invocador instanceof Miniatura_Producto) {
    Miniatura_Producto miniatura = (Miniatura_Producto) invocador;
        
    miniatura.actualizarImagenCamara();
    cargarItems();
 
}


        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboCliente;
    private javax.swing.JPanel contenedor;
    private javax.swing.JPanel contenedor_selector;
    private com.github.lgooddatepicker.components.DatePicker datePicker1;
    public javax.swing.JLabel icono_carga;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JComboBox<String> jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField lbl_descuento;
    private javax.swing.JTextField lbl_impuesto;
    private javax.swing.JTextField lbl_otrosCargos;
    private javax.swing.JLabel lbl_subTotal;
    private javax.swing.JLabel lbl_total;
    private javax.swing.JPopupMenu menu_contextual;
    // End of variables declaration//GEN-END:variables
}
